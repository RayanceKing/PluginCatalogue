{
  "schema_version": 1,
  "id": "salty_qq_chat",
  "authors": [
    "SALTWOOD"
  ],
  "repository": "https://github.com/SALTWOOD/SaltyQQChat",
  "branch": "master",
  "related_path": ".",
  "labels": [
    "api",
    "information",
    "management"
  ],
  "introduction": {
    "en_us": "<div align=\"center\">\n\n![SaltyQQChat](https://socialify.git.ci/SALTWOOD/SaltyQQChat/image?description=1&font=Inter&forks=1&issues=1&language=1&name=1&owner=1&pattern=Plus&pulls=1&stargazers=1&theme=Auto)\n\n# SaltyQQChat\n✨🎉 **An Extensible QQ Bot Plugin Powered by QQAPI!** 🎉✨\n</div>\n\n> [!WARNING]  \n> Due to the f**king Tencent, the development of this plugin is temporarily suspended. The new version will be released as a web-based bot.  \n> All new features will be updated, but no availability is promised for any feature.  \n> If you decide to use it, testing is on you.\n\n# Introduction\nThis is a QQ bot plugin based on [QQAPI](https://github.com/AnzhiZhang/MCDReforgedPlugins/tree/master/src/qq_api), essentially a reworked version of [QQChat](https://github.com/AnzhiZhang/MCDReforgedPlugins/tree/master/src/qq_chat). It removes many features that I consider unnecessary and optimizes the code structure.\n\nAdditionally, it supports simple bot extension through **API calls**, allowing you to add your own custom commands!\n\n**New features compared to QQChat include:**\n- [x] Supports ignoring commands from specific users via `/bot-ban` and `/bot-pardon`\n- [x] Allows the bot to execute more Minecraft native commands without using `/command` (such as `/ban`, `/pardon`)\n- [x] Allows starting and stopping the server through the bot\n- [x] Supports replying when the bot is mentioned, instead of just responding to a command\n- [x] Supports executing QQ bot commands within Minecraft\n- [x] Check bot status via `/ping` and `/info` commands\n- [x] **[Development Feature]** Remote plugin reload via `/reload`\n- [x] Customizable one-way/two-way MC <==> QQ group forwarding\n- [x] Easily extendable command tree based on regular expressions\n- [x] Automatically handle group join requests, friend requests, and group invitations.\n- [x] Verify if the Minecraft player exists when binding to a player.\n\n**Removed or modified features:**\n- [x] No \"management group\", \"main group\", or \"message sync group\" functionality. Instead, it uses multi-group synchronization (though typically, only one group is used)\n- [x] No \"MultiServer\" feature, as it leads to unpredictable bugs and has limited use\n- [x] Permissions are added to the `!!qq` command to prevent misuse, as CQ codes are not escaped, potentially allowing the bot account to send inappropriate content\n- [x] Spacing added between Chinese, numbers, and English, with a more humorous tone in the responses\n\n# Installation\n## Install via MCDR\nUse `!!MCDR plugin install salty_qq_chat` in the MCDR console, then `!!MCDR confirm`.\n\n## Install via Release\nDownload the corresponding `.mcdr` file from the [Releases page](https://github.com/SALTWOOD/SaltyQQChat/releases) and place it in the `plugins` folder, then reload the plugin.\n\n## Install via Source Code\nRun `git clone https://github.com/SALTWOOD/SaltyQQChat` or `git clone git@github.com:SALTWOOD/SaltyQQChat` in the `plugins` folder, then reload the plugin.\n\n# API\nOne of the most interesting features of this plugin is that you can extend it by adding custom commands via other MCDR plugins. Here's an example of a single-file plugin:\n\n```Python\nfrom mcdreforged.api.types import PluginServerInterface\nfrom typing import Callable, List\nimport re\n\nreply: Callable\nPLUGIN_METADATA = {\n    'id': 'sqc_extension',\n    'version': '1.0.0',\n    'name': 'SQC extension plugin',\n    'description': 'SaltyQQChat\\'s extension plugin',\n    'author': 'NONE',\n    'link': 'https://github.com',\n    'dependencies': {\n        'salty_qq_chat': '>=1.0.0'\n    }\n}\n\ndef on_load(server: PluginServerInterface, old):\n    global reply\n    sqc = server.get_plugin_instance(\"salty_qq_chat\")\n    qqapi = server.get_plugin_instance(\"qq_api\")\n\n    reply = sqc.reply\n\n    sqc.commands.add_command(re.compile(r'/your-command (.*)'), [str], handler)\n\ndef handler(server: PluginServerInterface, event, command: List[str],\n            event_type):\n    message = command[0]\n    reply(\n        event,\n        f\"[CQ:at,qq={event.user_id}] You provided the parameter: \\\"{message}\\\"\"\n    )\n```\n\n# Special Thanks\n- [QQAPI](https://github.com/AnzhiZhang/MCDReforgedPlugins/tree/master/src/qq_api) - Provides a WebSocket interface to CQHttp\n- **SALTWO∅D server members** - For helping me test the bot and discovering security vulnerabilities before the release\n",
    "zh_cn": "<div align=\"center\">\n\n![SaltyQQChat](https://socialify.git.ci/SALTWOOD/SaltyQQChat/image?description=1&font=Inter&forks=1&issues=1&language=1&name=1&owner=1&pattern=Plus&pulls=1&stargazers=1&theme=Auto)\n\n# SaltyQQChat\n✨🎉 **基于 QQAPI 的、可拓展的 QQ 机器人插件！** 🎉✨\n</div>\n\n> [!WARNING]\n> 因为有点大病的腾讯，此插件暂缓开发，新款插件将采用网页端机器人的形式。\n> 所有新功能都将会更新，但不保证任何功能的可用性。\n> 您要用就您自己测试吧.png\n\n# 简介\n这是一个使用 [QQAPI](https://github.com/AnzhiZhang/MCDReforgedPlugins/tree/master/src/qq_api) 的 QQ 机器人插件，相当于是另一个 [QQChat](https://github.com/AnzhiZhang/MCDReforgedPlugins/tree/master/src/qq_chat)，砍掉了很多个人认为没必要的功能，优化了代码结构。\n\n同时，它还支持通过 **API 调用**的方式，简单地扩展机器人，添加属于你的命令！\n\n目前相比 QQChat 新增功能：\n- [x] 支持通过 `/bot-ban` `/bot-pardon` 拒绝响应某用户\n- [x] 支持通过机器人执行更多原版命令而不使用 `/command`（如 `/ban` `/pardon`）\n- [x] 支持通过机器人启停服务器\n- [x] 支持艾特机器人进行答复，而不是发一句什么命令就答复\n- [x] 支持 MC 内执行 QQ 机器人命令\n- [x] 通过 `/ping` 命令、`/info` 命令检查机器人状态\n- [x] **[开发特性]** 通过 `/reload` 远程重载插件\n- [x] 可自定义的单向/双向 MC <==> QQ 群转发\n- [x] 基于正则表达式的易扩展命令树\n- [x] 自动处理加群、加好友、邀请入群申请\n- [x] 绑定玩家时验证正版玩家档案是否存在\n\n同时，还去除/修改了以下功能：\n- [x] 没有“管理群”、“主群”、“消息同步群”的功能，改为多群同步（不过一般就一个群而已）\n- [x] 没有“MultiServer”特性，因为会导致难以预料的 bug 且应用面小\n- [x] 对 `!!qq` 命令做了权限限制，因为没有对 CQ 码进行转义，可能会导致机器人账号被用于发布违规信息\n- [x] 中文和数字、英文之间做了间隔，且语气更加诙谐\n\n# 使用\n## 通过 MCDR 安装\n在 MCDR 控制台使用 `!!MCDR plugin install salty_qq_chat`，然后 `!!MCDR confirm`。\n\n## 通过 Release 安装\n在 [Releases 页面](https://github.com/SALTWOOD/SaltyQQChat/releases) 下载对应版本的 `.mcdr` 文件，放入 `plugins` 文件夹重载。\n\n## 通过源代码\n在 `plugins` 下执行 `git clone https://github.com/SALTWOOD/SaltyQQChat` 或者 `git clone git@github.com:SALTWOOD/SaltyQQChat`，然后重载插件。\n\n# API\n这是这个插件最有意思的功能之一，可以通过添加其他 MCDR 插件的方式为这个插件添加自定义命令。\n这里展出一个单文件插件的代码作为示例：\n```Python\nfrom mcdreforged.api.types import PluginServerInterface\nfrom typing import Callable, List\nimport re\n\nreply: Callable\nPLUGIN_METADATA = {\n    'id': 'sqc_extension',\n    'version': '1.0.0',\n    'name': 'SQC extension plugin',\n    'description': 'SaltyQQChat\\'s extension plugin',\n    'author': 'NONE',\n    'link': 'https://github.com',\n    'dependencies': {\n        'salty_qq_chat': '>=1.0.0'\n    }\n}\n\ndef on_load(server: PluginServerInterface, old):\n    global reply\n    sqc = server.get_plugin_instance(\"salty_qq_chat\")\n    qqapi = server.get_plugin_instance(\"qq_api\")\n\n    reply = sqc.reply\n\n    sqc.commands.add_command(re.compile(r'/你的命令 (.*)'), [str], handler)\n\ndef handler(server: PluginServerInterface, event, command: List[str],\n            event_type):\n    message = command[0]\n    reply(\n        event,\n        f\"[CQ:at,qq={event.user_id}] 你提供的参数是：\\\"{message}\\\"\"\n    )\n```\n\n# 特别鸣谢\n- [QQAPI](https://github.com/AnzhiZhang/MCDReforgedPlugins/tree/master/src/qq_api) - 提供正向 WebSocket 接入到 CQHttp 的接口\n- **SALTWO∅D 服务器的各位** - 帮我测试机器人，还赶在发布 Release 之前帮我发现了越权漏洞（\n"
  },
  "introduction_urls": {
    "en_us": "https://raw.githubusercontent.com/SALTWOOD/SaltyQQChat/master/README-EN.md",
    "zh_cn": "https://raw.githubusercontent.com/SALTWOOD/SaltyQQChat/master/README.md"
  }
}